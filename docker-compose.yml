version: "2.4"
services:
  router:
    image: "${ROUTER_DOCKER_IMAGE}"
    ports:
      - 80:8080
      - 443:8443
    restart: unless-stopped
    volumes:
      - "${CARTO3_SELFHOSTED_VOLUMES_BASE_PATH}certs/:/etc/nginx/ssl/:ro"
    env_file:
      - .env
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "20"
    mem_limit: 512M
    mem_reservation: 372M
    cpus: 0.5

  http-cache:
    image: "${HTTP_CACHE_DOCKER_IMAGE}"
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - maps-api
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "20"
    mem_limit: 1024M
    mem_reservation: 768M
    cpus: 0.5

  accounts-www:
    image: "${ACCOUNTS_WWW_DOCKER_IMAGE}"
    env_file:
      - .env
    restart: unless-stopped
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "20"
    mem_limit: 1024M
    mem_reservation: 768M
    cpus: 0.5

  workspace-www:
    image: "${WORKSPACE_WWW_DOCKER_IMAGE}"
    env_file:
      - .env
    restart: unless-stopped
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "20"
    mem_limit: 1024M
    mem_reservation: 768M
    cpus: 0.5

  workspace-api:
    image: "${WORKSPACE_API_DOCKER_IMAGE}"
    env_file:
      - .env
    depends_on:
      - workspace-migrations
    command: bash -c "npm run ready-to-run:built && npm run start:built"
    volumes: &default-volumes
      - "${CARTO3_SELFHOSTED_VOLUMES_BASE_PATH}certs/:/usr/src/certs/:ro"
    restart: unless-stopped
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "20"
    mem_limit: 1024M
    mem_reservation: 768M
    cpus: 1

  workspace-subscriber:
    image: "${WORKSPACE_API_DOCKER_IMAGE}"
    command: bash -c "npm run ready-to-run:built && npm run start:built:subscriber"
    volumes: *default-volumes
    env_file:
      - .env
    restart: unless-stopped
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "20"
    mem_limit: 512M
    mem_reservation: 372M
    cpus: 0.25

  workspace-migrations:
    image: "${WORKSPACE_MIGRATIONS_DOCKER_IMAGE}"
    entrypoint: ["/usr/src/app/onprem-init-db.sh"]
    env_file:
      - .env
    volumes: *default-volumes
    restart: on-failure
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "20"
    mem_limit: 512M
    mem_reservation: 248M
    cpus: 0.25

  maps-api:
    image: "${MAPS_API_DOCKER_IMAGE}"
    env_file:
      - .env
    command: bash -c "npm run ready-to-run:built && npm run start:built"
    volumes: *default-volumes
    environment:
      - MAPS_API_V3_RESOURCE_URL_TEMPLATE_NEW=https://$${host}/api/$${path}
    restart: unless-stopped
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "20"
    mem_limit: 2048M
    mem_reservation: 768M
    cpus: 1

  cdn-invalidator-sub:
    image: "${CDN_INVALIDATOR_SUB_DOCKER_IMAGE}"
    command: npm run start:built
    volumes: &default-volumes-double-level
      - "${CARTO3_SELFHOSTED_VOLUMES_BASE_PATH}certs/:/usr/src/app/certs/:ro"
    env_file:
      - .env
    restart: unless-stopped
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "20"
    mem_limit: 512M
    mem_reservation: 372M
    cpus: 0.25

  import-api:
    image: "${IMPORT_API_DOCKER_IMAGE}"
    env_file:
      - .env
    command: bash -c "npm run ready-to-run:built && npm run start:built"
    volumes: *default-volumes
    restart: unless-stopped
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "20"
    mem_limit: 512M
    mem_reservation: 372M
    cpus: 1

  import-worker:
    image: "${IMPORT_API_DOCKER_IMAGE}"
    volumes: *default-volumes
    env_file:
      - .env
    command: npm run start:built:subscriber
    restart: unless-stopped
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "20"
    mem_limit: 4096M
    mem_reservation: 2048M
    cpus: 1

  lds-api:
    image: "${LDS_API_DOCKER_IMAGE}"
    env_file:
      - .env
    command: bash -c "npm run ready-to-run:built && npm run start:built"
    volumes: *default-volumes
    restart: unless-stopped
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "20"
    mem_limit: 1024M
    mem_reservation: 768M
    cpus: 1

  workspace-postgres:
    scale: "${LOCAL_POSTGRES_SCALE}"
    image: "postgres:13.2-alpine"
    env_file:
      - .env
    volumes:
      - workspace-pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_ADMIN_PASSWORD
      - POSTGRES_USER=$POSTGRES_ADMIN_USER
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "20"
    mem_limit: 2048M
    mem_reservation: 1024M
    cpus: 1

  redis:
    scale: "${LOCAL_REDIS_SCALE}"
    image: "redis:6.0-alpine"
    env_file:
      - .env
    restart: unless-stopped
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "20"
    mem_limit: 1024M
    mem_reservation: 768M
    cpus: 0.5
networks:
  default:

volumes:
  workspace-pgdata:
